#-- Haskell Stack non-privileged (rootless) builder image.
#--
#-- Installs Stack from official signed binary,
#--   then GHC from FPCO bindist (via stack setup).
#--
#-- (Meant to be) preconfigured to produce static binaries.
#--
#-- Usage:
#--   docker build \
#--     -t coinweb/stacktastic-build:lts-16.19 \
#--     --build-arg STACK_RESOLVER=lts-16.19 \
#--     Dockerfile.stacktastic-build

FROM debian:stable-slim

# NOTE on Ubuntu (only), there're issues like this:
#   https://github.com/finkel-lang/finkel/issues/2

LABEL vendor="Coinweb Ltd."

ENV LC_ALL=C.UTF-8


#-- install basic deps
RUN apt-get update --allow-releaseinfo-change -y && \
    apt-get install -yq --no-install-recommends --no-install-suggests \
      ca-certificates \
      curl \
      gcc \
      g++ \
      git \
      gnupg \
      jq \
      libc-dev \
      libgmp-dev \
      liblzma-dev \
      libczmq-dev \
      libpq-dev \
      libsecp256k1-dev \
      libssl-dev \
      libtinfo6 \
      libtinfo-dev \
      make \
      perl \
      pkg-config \
      ssh \
      sudo \
      xz-utils \
      zlib1g-dev \
    ; rm -rf /var/cache/apt/lists
    # [+253 MiB]

#-- install postgresql-client source
ARG POSTGRES_VERSION=14
RUN echo "deb http://apt.postgresql.org/pub/repos/apt $(env -i bash -c '. /etc/os-release; echo $VERSION_CODENAME')-pgdg main" | tee /etc/apt/sources.list.d/postgresql.list; \
    [ -f /etc/apt/trusted.gpg.d/postgresql.gpg ] && rm /etc/apt/trusted.gpg.d/postgresql.gpg; \
    curl -fsSL https://www.postgresql.org/media/keys/ACCC4CF8.asc | gpg --dearmor -o /etc/apt/trusted.gpg.d/postgresql.gpg; \
    apt-get update --allow-releaseinfo-change -y && apt-get install -yq --no-install-recommends --no-install-suggests postgresql-client-$POSTGRES_VERSION; \
    rm -rf /var/cache/apt/lists

#-- install stack
ARG STACK_VERSION=2.13.1
ARG STACK_RESOLVER=lts-18.28
ENV STACK_BIN=https://github.com/commercialhaskell/stack/releases/download/v${STACK_VERSION}/stack-${STACK_VERSION}-linux-x86_64-bin
WORKDIR /usr/local/share
COPY ./stack/stack-${STACK_VERSION}-linux-x86_64-bin.sha256 \
     ./stack/stack-${STACK_VERSION}-linux-x86_64-bin.asc \
     ./stack/GPG-KEY-575159689BEFB442-dev@fpcomplete \
     ./
# hadolint ignore=DL4006
RUN curl -fsSL "$STACK_BIN" -o ${STACK_BIN##*/} && \
    sha256sum -c stack-*-linux-x86_64-bin.sha256 >&2 && \
    gpg -q --import GPG-KEY-* && \
    printf "trust\n5\ny\n" | gpg --command-fd 0 --no-tty --edit-key 575159689BEFB442 2>/dev/null && \
    gpg --verify stack-*-linux-x86_64-bin.asc && \
    rm -rf ~/.gnupg && \
    mv -v stack-*-linux-x86_64-bin /usr/local/bin/stack && \
    chmod 755 /usr/local/bin/stack && \
    echo "stack binary verified and installed." >&2 && \
    stack --version
    # [+60 MiB]

#-- install kustomize
# hadolint ignore=DL4006
RUN export URL="https://raw.githubusercontent.com/kubernetes-sigs/kustomize/master/hack/install_kustomize.sh"; \
    ( cd /usr/local/bin && curl -fsSL "$URL" | bash; ); \
    kustomize version

#-- drop root
# hadolint ignore=SC2016
RUN adduser --disabled-password --uid 1000 builder && \
    echo 'builder ALL=(ALL) NOPASSWD: ALL' > /etc/sudoers.d/enable-builder-sudo && \
    chmod 0440 /etc/sudoers.d/enable-builder-sudo && \
    echo 'test -d "$HOME/bin" && [ "${PATH#*$HOME/bin}" == "$PATH" ] && export PATH="$PATH:$HOME/bin"' > /etc/profile.d/add-home-bin-to-PATH.sh && \
    echo 'export PATH="$PATH:$(stack path --compiler-bin)"' > /etc/profile.d/add-stack-ghc-to-PATH.sh && \
    # debian does not source /etc/profile in ~/.bashrc
    echo 'source /etc/profile' >> /home/builder/.bashrc

USER builder
WORKDIR /home/builder

#-- configure Stack, pull a GHC, strip it down [+1.86 GiB]
ARG GHC_VERSION=8.10.7
COPY ./stack/stack-config.yaml /tmp/
RUN install -Dm644 /tmp/stack-config.yaml /home/builder/.stack/config.yaml; \
    stack setup \
        --install-ghc \
        --resolver=$STACK_RESOLVER \
        $GHC_VERSION \
        ; \
    rm -rf ~/.stack/programs/*/ghc-*.tar.xz \
           ~/.stack/programs/*/ghc-*/share/doc \
        ; \
    strip ~/.stack/programs/*/ghc-*/lib/ghc-*/bin/*

#-- almost done; pre-download snapshot index for speed [+1.86 GiB]
RUN stack update

#-- add correctly permissioned volumes for host code, build outputs, build cache
RUN mkdir -v src bin
VOLUME /home/builder/src
VOLUME /home/builder/bin
#-- stack for some reason leaves snapshots directory under root ownership
# RUN sudo chown -R builder:builder /home/builder/.stack
#VOLUME /home/builder/.stack/snapshots

WORKDIR /home/builder/src
